import disnake
from disnake.ext import commands
from disnake import Option
import os, sqlite3
import atexit
import json
from tabulate import tabulate #—É–¥–æ–±–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
import json #–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è, –Ω–æ –µ–º—É –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏ –¥—Ä—É–≥–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
import random
conn = sqlite3.connect("Discord.db") # –∏–ª–∏ :memory:
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS shop (
    id INTEGER PRIMARY KEY,
    type TEXT,
    name TEXT,
    cost INTEGER
)
''')

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    nickname TEXT,
    mention TEXT,
    money INTEGER,
    rep_rank TEXT,
    inventory TEXT,
    lvl INTEGER,
    xp INTEGER
)
''')

intents = disnake.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
bot = commands.Bot(command_prefix='+', intents=intents)

@bot.event
async def on_ready():
    print("Bot Has been runned")#—Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    for guild in bot.guilds:#—Ç.–∫. –±–æ—Ç –¥–ª—è –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞, —Ç–æ –∏ —Ü–∏–∫–ª –≤—ã–≤–æ–¥–∏—Ç –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä
        print(guild.id)#–≤—ã–≤–æ–¥ id —Å–µ—Ä–≤–µ—Ä–∞
        serv=guild#–±–µ–∑ –ø–æ–Ω—è—Ç–∏—è –∑–∞—á–µ–º —ç—Ç–æ
        for member in guild.members:#—Ü–∏–∫–ª, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
            cursor.execute(f"SELECT id FROM users where id={member.id}")#–ø—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ë–î
            if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                cursor.execute(f"INSERT INTO users VALUES ({member.id}, '{member.name}', '<@{member.id}>', 50000, 'S','[]',0,0)")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ –≤ –ë–î
            else:#–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                pass
            conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î


@bot.event
async def on_member_join(member):
    cursor.execute(f"SELECT id FROM users where id={member.id}")#–≤—Å–µ —Ç–∞–∫–∂–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –ë–î
    if cursor.fetchone()==None:#–ï—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        cursor.execute(f"INSERT INTO users VALUES ({member.id}, '{member.name}', '<@{member.id}>', 50000, 'S','[]',0,0)")#–≤–≤–æ–¥–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–µ –≤ –ë–î
    else:#–ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        pass
    conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

@bot.event
async def on_message(message):
    if len(message.content) > 10:#–∑–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–æ–π > 10 —Å–∏–º–≤–æ–ª–æ–≤...
        for row in cursor.execute(f"SELECT xp,lvl,money FROM users where id={message.author.id}"):
            expi=row[0]+random.randint(5, 40)#–∫ –æ–ø—ã—Ç—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
            cursor.execute(f'UPDATE users SET xp={expi} where id={message.author.id}')
            lvch=expi/(row[1]*1000)
            print(int(lvch))
            lv=int(lvch)
            if row[1] < lv:#–µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—å—à–µ —É—Ä–æ–≤–Ω—è, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Ä–∞—Å—Å—á–∏—Ç–∞–Ω —Ñ–æ—Ä–º—É–ª–æ–π –≤—ã—à–µ,...
                await message.channel.send(f'–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!')#—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...
                bal=1000*lv
                cursor.execute(f'UPDATE users SET lvl={lv},money={bal} where id={message.author.id}')#–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –¥–µ–Ω—å–≥–∏
    await bot.process_commands(message)#–î–∞–ª–µ–µ —ç—Ç–æ –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è ctx –∫–æ–º–∞–Ω–¥
    conn.commit()#–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î



@bot.command()
async def ping(ctx):
    await ctx.reply(f'–ü–æ–Ω–≥! {round(bot.latency * 1000)} –º—Å')

@bot.slash_command(name='giverole', description='–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é')
async def give_role(interaction, member: disnake.Member, role: disnake.Role):
    await member.add_roles(role)
    await interaction.response.send_message('–†–æ–ª—å –≤—ã–¥–∞–Ω–∞!')


@bot.slash_command(name='removerole', description='–ó–∞–±–æ—Ä —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def take_role(interaction, member: disnake.Member, role: disnake.Role):
    await member.remove_roles(role)
    await interaction.response.send_message('–†–æ–ª—å —É–±—Ä–∞–Ω–∞!')

@bot.slash_command(name='changenick', description='–ò–∑–º–µ–Ω—è–µ—Ç –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def set_nick(interaction, member: disnake.Member, nick: str):
    await member.edit(nick=nick)
    await interaction.response.send_message('–ù–∏–∫–Ω–µ–π–º –∏–∑–º–µ–Ω–µ–Ω!')

	

intents = disnake.Intents.default()
intents.members = True  # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —ç—Ç–æ—Ç –∏–Ω—Ç–µ–Ω—Ç –≤ –≤–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Discord

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}!')

MUTE_ROLE_NAME = "–ó–∞–≥–ª—É—à–µ–Ω–Ω—ã–π"
LOG_CHANNEL_ID = 1158183124648337473  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
VOICE_CHANNEL_ID = 1245376471040655462
ROLE_ID = 1269621671636107345
DATA_FILE = 'user_data.json'
ALLOWED_USER_ID = 812358905421889546  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Discord ID
color_roles = {
    "Aquamarine": 1342858191934984193,
    "Rainbow": 1342859043823161436,
    "Wine Red": 1342862328214978581,
    "Pale Green": 1342862553511891064,
    "–°–Ω—è—Ç—å —Ü–≤–µ—Ç": None
}


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
intents = disnake.Intents.default()
intents.message_content = True
intents.guilds = True
intents.voice_states = True
bot = commands.Bot(command_prefix='!', intents=intents)
intents = disnake.Intents.default()
intents.message_content = True  # –í–∫–ª—é—á–∞–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
intents.members = True
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
def load_data():
    if not os.path.exists(DATA_FILE):
        return {}
    with open(DATA_FILE, 'r') as f:
        try:
            return json.load(f)
        except json.JSONDecodeError:
            return {}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ JSON-—Ñ–∞–π–ª
def save_data(data):
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f, indent=4)

# –ö–æ–º–∞–Ω–¥–∞ /myinfo
@bot.slash_command(name="myinfo", description="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ")
async def myinfo(ctx: disnake.ApplicationCommandInteraction):
    user_id = str(ctx.author.id)
    data = load_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if user_id not in data:
        data[user_id] = {"nickname": ctx.author.name, "money": 0, "lvl": 1, "xp": 0}
        save_data(data)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å

    user_info = data[user_id]
    emojiadm = '<:authoritybot:1340048069864984698>'  # –ó–∞–º–µ–Ω–∏—Ç–µ my_emoji –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ —ç–º–æ–¥–∑–∏
    emojicoins = '<:babkiblyat:1342914669538578443>'
    emojilvl = '<:lvl:1342914640883224636>'
    emojixp = '<:exp:1342914432774438922>'
    # –°–æ–∑–¥–∞–µ–º embed —Å–æ–æ–±—â–µ–Ω–∏–µ
    embed = disnake.Embed(title=f"{emojiadm} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author.name}", color=disnake.Color.light_gray())
    embed.add_field(name="üí∞ –ë–∞–ª–∞–Ω—Å AS", value=f"`{user_info['money']:,} AS-–∫–æ–∏–Ω–æ–≤`", inline=True)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ –∫ –ø–æ–ª—é
    embed.add_field(name="üìà –£—Ä–æ–≤–µ–Ω—å", value=f"`{user_info['lvl']}`", inline=True)  # –≠–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è
    embed.add_field(name="‚ö°Ô∏è –û–ø—ã—Ç", value=f"`{user_info['xp']:,}`", inline=False)  # –≠–º–æ–¥–∑–∏ –¥–ª—è –æ–ø—ã—Ç–∞

    await ctx.send(embed=embed)


# –ö–æ–º–∞–Ω–¥–∞ /givexp
@bot.slash_command(name="givexp", description="–í—ã–¥–∞—Ç—å –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
async def givexp(ctx: disnake.ApplicationCommandInteraction, user: disnake.User, value: int):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –≤—ã–∑—ã–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if ctx.author.id != ALLOWED_USER_ID:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –±–æ–ª—å—à–µ –Ω—É–ª—è
    if value <= 0:
        await ctx.send("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—ã—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
        return

    data = load_data()
    user_id = str(user.id)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
    if user_id not in data:
        data[user_id] = {"nickname": user.name, "money": 0, "lvl": 1, "xp": 0, "messages": 0}

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    data[user_id]["xp"] += value

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 XP –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è)
    while data[user_id]["xp"] >= 100:
        data[user_id]["lvl"] += 1
        data[user_id]["xp"] -= 100  # –°–±—Ä–æ—Å XP –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    save_data(data)

    # –°–æ–∑–¥–∞–µ–º Embed —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–¥–∞—á–µ –æ–ø—ã—Ç–∞
    embed = disnake.Embed(title="–í—ã–¥–∞—á–∞ –æ–ø—ã—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", color=disnake.Color.light_gray())
    embed.add_field(name="", value=f"–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ {ctx.author.mention} –≤—ã–¥–∞–ª {value} –æ–ø—ã—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention}", inline=False)

    await ctx.send(embed=embed)
@bot.event
async def on_message(message):
    if message.author.bot:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤

    user_id = str(message.author.id)
    data = load_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if user_id not in data:
        data[user_id] = {"nickname": message.author.name, "money": 0, "lvl": 1, "xp": 0, "messages": 0}

    user_info = data[user_id]

    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    user_info["messages"] += 1

    # –ó–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ XP (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 5 –¥–æ 15)
    xp_gained = random.randint(5, 15)
    user_info["xp"] += xp_gained

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 XP –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è)
    if user_info["xp"] >= 100:
        user_info["lvl"] += 1
        user_info["xp"] -= 100  # –°–±—Ä–æ—Å XP –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    data[user_id] = user_info

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    save_data(data)

    await bot.process_commands(message)  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.event
async def on_message(message):
    if message.author.bot:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤

    user_id = str(message.author.id)
    data = load_data()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if user_id not in data:
        data[user_id] = {"nickname": message.author.name, "money": 0, "lvl": 1, "xp": 0}

    user_info = data[user_id]

    # –ó–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ XP (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç 5 –¥–æ 15)
    xp_gained = random.randint(5, 15)
    user_info["xp"] += xp_gained

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 XP –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è)
    if user_info["xp"] >= 100:
        user_info["lvl"] += 1
        user_info["xp"] -= 100  # –°–±—Ä–æ—Å XP –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    data[user_id] = user_info

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
    save_data(data)


@bot.slash_command(name='vc', description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –∫ –ø–æ–¥–≤–∞–ª—É.')
async def vc_command(ctx: disnake.ApplicationCommandInteraction, option: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not ctx.author.guild_permissions.administrator:
        await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –ø–æ ID
    voice_channel = bot.get_channel(VOICE_CHANNEL_ID)
    if not isinstance(voice_channel, disnake.VoiceChannel):
        await ctx.send("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ ID
    role = ctx.guild.get_role(ROLE_ID)
    if role is None:
        await ctx.send("–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", ephemeral=True)
        return

    if option == '–û–¢–ö–†–´–¢–´–ô':
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–æ–ª–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è
        await voice_channel.set_permissions(role, connect=True)
        await ctx.send("–ü–æ–¥–≤–∞–ª —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.")
    elif option == '–ó–ê–ö–†–´–¢–´–ô':
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–æ–ª–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –º–æ–≥–ª–∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è
        await voice_channel.set_permissions(role, connect=False)
        await ctx.send("–ü–æ–¥–≤–∞–ª —Ç–µ–ø–µ—Ä—å –∑–∞–∫—Ä—ã—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.")
    else:
        await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: '–ó–ê–ö–†–´–¢–´–ô' –∏–ª–∏ '–û–¢–ö–†–´–¢–´–ô'.", ephemeral=True)

@vc_command.autocomplete('option')
async def vc_option_autocomplete(interaction: disnake.ApplicationCommandInteraction, current: str):
    options = ['–ó–ê–ö–†–´–¢–´–ô', '–û–¢–ö–†–´–¢–´–ô']
    return [option for option in options if current.lower() in option.lower()]

   

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}!')

@bot.event
async def on_member_update(before, after):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        moderator = after.guild.me  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π
        added_roles = [role for role in after.roles if role not in before.roles]
        removed_roles = [role for role in before.roles if role not in after.roles]

        if added_roles:
            embed = disnake.Embed(title="–†–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∞", color=disnake.Color.green())
            embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=after.mention, inline=False)
            embed.add_field(name="–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", value=', '.join([role.name for role in added_roles]), inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
            await log_channel.send(embed=embed)

        if removed_roles:
            embed = disnake.Embed(title="–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞", color=disnake.Color.red())
            embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=after.mention, inline=False)
            embed.add_field(name="–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", value=', '.join([role.name for role in removed_roles]), inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
            await log_channel.send(embed=embed)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ —Ä–æ–ª–µ–π
        if before.roles != after.roles:
            changed_roles = [role for role in after.roles if role not in before.roles or role.permissions != before.get_role(role.id).permissions]
            if changed_roles:
                embed = disnake.Embed(title="–ò–∑–º–µ–Ω–µ–Ω—ã –ø—Ä–∞–≤–∞ —Ä–æ–ª–µ–π", color=disnake.Color.orange())
                embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=after.mention, inline=False)
                embed.add_field(name="–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ä–æ–ª–∏", value=', '.join([role.name for role in changed_roles]), inline=False)
                embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
                await log_channel.send(embed=embed)

@bot.event
async def on_guild_role_create(role):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        moderator = role.guild.me  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)
        embed = disnake.Embed(title="–†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞", color=disnake.Color.green())
        embed.add_field(name="–†–æ–ª—å", value=role.name, inline=False)
        embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
        await log_channel.send(embed=embed)

@bot.event
async def on_guild_role_delete(role):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        moderator = role.guild.me  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)
        embed = disnake.Embed(title="–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞", color=disnake.Color.red())
        embed.add_field(name="–†–æ–ª—å", value=role.name, inline=False)
        embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
        await log_channel.send(embed=embed)

@bot.event
async def on_guild_role_update(before, after):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        moderator = after.guild.me  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)

        if before.permissions != after.permissions:
            embed = disnake.Embed(title="–ò–∑–º–µ–Ω–µ–Ω—ã –ø—Ä–∞–≤–∞ —Ä–æ–ª–∏", color=disnake.Color.orange())
            embed.add_field(name="–†–æ–ª—å", value=after.name, inline=False)
            embed.add_field(name="–°—Ç–∞—Ä—ã–µ –ø—Ä–∞–≤–∞", value=str(before.permissions), inline=False)
            embed.add_field(name="–ù–æ–≤—ã–µ –ø—Ä–∞–≤–∞", value=str(after.permissions), inline=False)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
            await log_channel.send(embed=embed)

@bot.event
async def on_guild_channel_create(channel):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        moderator = channel.guild.me  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)
        embed = disnake.Embed(title="–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω", color=disnake.Color.green())
        embed.add_field(name="–ö–∞–Ω–∞–ª", value=channel.name, inline=False)
        embed.add_field(name="–¢–∏–ø –∫–∞–Ω–∞–ª–∞", value=str(channel.type), inline=False)
        embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
        await log_channel.send(embed=embed)



@bot.event
async def on_message_delete(message):
    if message.author.bot:  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
        return

    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        embed = disnake.Embed(title="–°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", color=disnake.Color.light_gray())
        embed.add_field(name="–ê–≤—Ç–æ—Ä", value=message.author.mention, inline=False)
        embed.add_field(name="–°–æ–¥–µ—Ä–∂–∏–º–æ–µ", value=message.content or "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ", inline=False)
        embed.add_field(name="–ö–∞–Ω–∞–ª", value=message.channel.mention, inline=False)
        embed.add_field(name="–î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è", value=disnake.utils.format_dt(disnake.utils.utcnow(), "F"), inline=False)

        await log_channel.send(embed=embed)

@bot.event
async def on_message_edit(before, after):
    if before.author.bot:  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
        return

    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        embed = disnake.Embed(title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ", color=disnake.Color.light_gray())
        embed.add_field(name="–ê–≤—Ç–æ—Ä", value=before.author.mention, inline=False)
        embed.add_field(name="–°—Ç–∞—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ", value=before.content or "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ", inline=False)
        embed.add_field(name="–ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ", value=after.content or "–°–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ", inline=False)
        embed.add_field(name="–ö–∞–Ω–∞–ª", value=before.channel.mention, inline=False)
        embed.add_field(name="–î–∞—Ç–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", value=disnake.utils.format_dt(disnake.utils.utcnow(), "F"), inline=False)

        await log_channel.send(embed=embed)

async def log_action(action_type, member, reason, moderator, action_status):
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    if log_channel:
        embed = disnake.Embed(title="–ù–∞–∫–∞–∑–∞–Ω–∏–µ", color=disnake.Color.light_gray())
        embed.add_field(name="–¢–∏–ø –Ω–∞–∫–∞–∑–∞–Ω–∏—è", value=f"{action_type} - {action_status}", inline=False)  # –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª–µ
        embed.add_field(name="–î–∞—Ç–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", value=disnake.utils.format_dt(disnake.utils.utcnow(), "F"), inline=False)
        embed.add_field(name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=moderator.mention, inline=False)
        embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=False)
        embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)

        await log_channel.send(embed=embed)

@bot.slash_command(name='listusers', description='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
async def list_users(interaction: disnake.ApplicationCommandInteraction):
    cursor.execute('SELECT * FROM users')
    users = cursor.fetchall()

    if users:
        user_list = '\n'.join([f'ID: {user[0]}, –°–æ–æ–±—â–µ–Ω–∏—è: {user[1]}, –í—Ä–µ–º—è –≥–æ–ª–æ—Å–∞: {user[2]}, –£—Ä–æ–≤–µ–Ω—å: {user[3]}, –ë–∞–ª–∞–Ω—Å: {user[4]}' for user in users])
        await interaction.send(f'–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_list}')
    else:
        await interaction.send('–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')


@bot.slash_command(description="–ó–∞–º—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(manage_roles=True)
async def mute(interaction: disnake.ApplicationCommandInteraction, member: disnake.Member, duration: int, reason: str = None):
    mute_role = disnake.utils.get(interaction.guild.roles, name=MUTE_ROLE_NAME)
    
    if not mute_role:   
        await interaction.send(f"–†–æ–ª—å '{MUTE_ROLE_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    await member.add_roles(mute_role, reason=reason)

    embed = disnake.Embed(title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—É—á–µ–Ω", color=disnake.Color.light_grey())
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=True)
    embed.add_field(name="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=f"{duration} –º–∏–Ω—É—Ç(—ã)", inline=True)
    embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)
    embed.add_field(name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=False)

    await interaction.send(embed=embed)

    # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    await asyncio.sleep(duration * 60)  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –º–∏–Ω—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—ã

    # –£–¥–∞–ª—è–µ–º —Ä–æ–ª—å "Muted"
    await member.remove_roles(mute_role)

    embed_unmute = disnake.Embed(title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω", color=disnake.Color.light_grey())
    embed_unmute.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=True)
    embed_unmute.add_field(name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=False)

    await interaction.channel.send(embed=embed_unmute)
    await log_action("Unmute", member, reason, interaction.user, "–°–Ω—è—Ç–æ")

@bot.slash_command(description="–†–∞–∑–º—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(manage_roles=True)
async def unmute(interaction: disnake.ApplicationCommandInteraction, member: disnake.Member, reason: str = None):
    mute_role = disnake.utils.get(interaction.guild.roles, name=MUTE_ROLE_NAME)

    if not mute_role:
        await interaction.send(f"–†–æ–ª—å '{MUTE_ROLE_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    await member.remove_roles(mute_role, reason=reason)

    embed = disnake.Embed(title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–º—É—á–µ–Ω", color=disnake.Color.light_grey())
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention, inline=True)
    embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)
    embed.add_field(name="–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=False)

    await interaction.send(embed=embed)
    await log_action("Unmute", member, reason, interaction.user)

@bot.slash_command(name='warning', description="–í—ã–¥–∞—Ç—å —É—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
@commands.has_permissions(manage_roles=True)
async def warning(interaction: disnake.ApplicationCommandInteraction, member: disnake.Member, reason: str = None):
    embed = disnake.Embed(title="**–£—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ**", color=disnake.Color.light_gray())
    embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ —É—Å—Ç–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ {interaction.user.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ <#1158183124648337469> –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞, –∏–Ω–∞—á–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤–∞–º –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–æ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ.", inline=False)
    embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ –≤—ã–¥–∞—á–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)

    await interaction.send(content=f"{member.mention}", embed=embed)
    await log_action("Warning", member, reason, interaction.user)

@bot.slash_command(name='ban', description="–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(ban_members=True)
async def ban(interaction: disnake.ApplicationCommandInteraction, member: disnake.Member, reason: str = None):
    await interaction.guild.ban(member, reason=reason)  # –ë–∞–Ω–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞

    embed = disnake.Embed(title="**–í—ã–¥–∞—á–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏**", color=disnake.Color.light_gray())
    embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {interaction.user.mention} –≤—ã–¥–∞–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}.", inline=False)
    embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ –≤—ã–¥–∞—á–∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)

    await interaction.send(content=f"{member.mention}", embed=embed)
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    await log_action("Ban", member, reason, interaction.user, "–í—ã–¥–∞–Ω–æ")

@bot.slash_command(name='unban', description="–°–Ω—è—Ç—å –±–∞–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
@commands.has_permissions(ban_members=True)
async def unban(interaction: disnake.ApplicationCommandInteraction, member: disnake.Member, reason: str = None):
    await interaction.guild.unban(member)  # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –±–∞–Ω–∞

    embed = disnake.Embed(title="**–°–Ω—è—Ç–∏–µ –±–∞–Ω–∞**", color=disnake.Color.green())
    embed.add_field(name="–°–æ–æ–±—â–µ–Ω–∏–µ", value=f"–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {interaction.user.mention} —Å–Ω—è–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}.", inline=False)
    embed.add_field(name="–ü—Ä–∏—á–∏–Ω–∞ —Å–Ω—è—Ç–∏—è –±–∞–Ω–∞", value=reason if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞', inline=False)
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
    await log_action("Unban", member, reason, interaction.user, "–°–Ω—è—Ç–æ")

bot.run('MTMzODQ2NjE5NTkwMDQ2NTI3NQ.GI5p8U.41WSbSYNE0anAYRoKTeGduy5isvrhYPru8xpZQ')

atexit.register(lambda: conn.close())